stageResults = [:]

pipeline{
    agent any

    environment{
        def BUILD_VERSION = sh(script: "echo `date +%s`", returnStdout: true).trim()
        echo "${BUILD_VERSION}"
    }

    stages{
        stage('Stage 1'){
            steps{
                script{
                    try{
                        echo "Stage Name : ${env.STAGE_NAME}"
                        stageResults."${env.STAGE_NAME}" = "SUCCESS"
                    }
                    catch(Exception e){
                        // stageResults.env.STAGE_NAME = "UNSTABLE"
                    }
                }
            }
        }
        stage('Stage 2'){
            steps{
                script{
                    try{
                        echo "Stage Name : ${env.STAGE_NAME} ${TEST}"
                        stageResults."${env.STAGE_NAME}" = "SUCCESS"
                    }
                    catch(Exception e){
                        currentBuild.result = "FAILURE"
                        stageResults."${env.STAGE_NAME}" = "FAILURE"
                        error("Caught exception")
                    }
                }
            }
        }
    }
    post {
        always {
            script{
                for(element in stageResults){
                    echo "${element.key} ${element.value}"
                }
                // echo "Current build version: ${BUILD_VERSION}"
            }
        }
    }
}