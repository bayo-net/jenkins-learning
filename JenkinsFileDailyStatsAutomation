stageResults = [:]

def initEnvironment(){
    sh 'apt-get update'
    sh 'apt install -y nodejs'
    sh 'apt-get install -y jq'
    sh 'node -v'
}

pipeline{
    agent any

    options{
        timestamps()
    }

    environment{
        BUILD_TIMESTAMP = sh(script: "echo `date +'%m-%d-%Y'`", returnStdout: true).trim()
    }

    stages{

        stage('Init'){
            steps{
                initEnvironment()
            }
        }

        stage('Stage 1'){
            steps{
                script{
                    try{
                        echo "Stage Name : ${env.STAGE_NAME}"
                        stageResults."${env.STAGE_NAME}" = "SUCCESS"
                    }
                    catch(Exception e){
                        // stageResults.env.STAGE_NAME = "UNSTABLE"
                    }
                }
            }
        }

        stage('Stage 2'){
            steps{
                script{
                    try{
                        echo "Stage Name : ${env.STAGE_NAME} ${TEST}"
                        stageResults."${env.STAGE_NAME}" = "SUCCESS"
                    }
                    catch(Exception e){
                        currentBuild.result = "FAILURE"
                        stageResults."${env.STAGE_NAME}" = "FAILURE"
                        error("Caught exception")
                    }
                }
            }
        }
    }
    post {
        always {
            script{
                for(element in stageResults){
                    echo "${element.key} ${element.value}"
                }
                echo "Current build version: ${BUILD_TIMESTAMP}"
                sh "node ./updateDailyStats.js"
            }
        }
    }
}